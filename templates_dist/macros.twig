{% macro exceptionChainPills(exception, _no) %}{% import _self as functions %}{% set no = _no|default(1) %}<li {{ 1 == no ? 'class="active"' }}><a href="#main-exception-{{ no }}" data-toggle="tab">{{ exception.getOriginalClass() }} #{{ no }}</a></li>{% if exception.hasPrevious() %}{{ functions.exceptionChainPills(exception.getPrevious(), no+1) }}{% endif %}{% endmacro %}{% macro exception(exception, editor, hasEditor, no) %}<h2>Message</h2>{% set class = exception.getOriginalClass() %}{% set message = exception.getMessage() %}<pre><strong>{{ class }}</strong>{{ message != '' ? ' ' ~ message }}</pre><h2>Stack trace</h2>{% set stepIndex = -1 %}{% for step in exception.getStackTrace() %}{% set stepIndex = stepIndex + 1 %}{% set stepKey = 'e-' ~ no ~ 'step-' ~ stepIndex %}{% include 'exception-step.twig' %}{% endfor %}{% endmacro %}{% macro exceptionChain(exception, editor, hasEditor, _no) %}{% import _self as functions %}{% set no = _no|default(1) %}<div class="tab-pane fade active in" id="main-exception-{{ no }}">{{ functions.exception(exception, editor, hasEditor, no) }}</div>{% if exception.hasPrevious() %}{{ functions.exceptionChain(exception.getPrevious(), editor, hasEditor, no+1) }}{% endif %}{% endmacro %}
